upstream frontend_prod {
    server frontend-prod:8080;
}

upstream api_prod {
    server backend-prod:5000;
}

# HTTP -> HTTPS FOR PRODUCTION
server {
    listen 80;
    listen [::]:80;
    server_name easytask.vt.in.th;

    return 301 https://$server_name$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name easytask.vt.in.th;
    
    ssl_certificate /nginx-cert/easytask.vt.in.th/fullchain1.pem;
    ssl_certificate_key /nginx-cert/easytask.vt.in.th/privkey1.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    client_max_body_size 100M;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        proxy_buffers 16 32k;
        proxy_buffer_size 64k;

        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;

        proxy_pass http://frontend_prod/;

        location /_next/webpack-hmr {
            proxy_pass http://frontend_prod/_next/webpack-hmr;
        }

        location /api {
            proxy_pass http://api_prod/;
        }
    }

    access_log /var/log/nginx/easytask.vt.in.th.log;
    error_log /var/log/nginx/easytask.vt.in.th.log;
}

