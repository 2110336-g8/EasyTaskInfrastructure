services:
  mongodb1:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongodb1_data:/data/db"
      - "mongodb1_config:/data/configdb"
      - "~/deploy/secrets/mongodb.dump:/restore/mongodb.dump"
      - "~/deploy/secrets/rskey:/keys/rskey"
    networks:
      - "backend-network"

  mongodb2:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - "mongodb2_data:/data/db"
      - "mongodb2_config:/data/configdb"
      - "~/deploy/secrets/mongodb.dump:/restore/mongodb.dump"
      - "~/deploy/secrets/rskey:/keys/rskey"
    networks:
      - "backend-network"

  mongodb3:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - "mongodb3_data:/data/db"
      - "mongodb3_config:/data/configdb"
      - "~/deploy/secrets/mongodb.dump:/restore/mongodb.dump"
      - "~/deploy/secrets/rskey:/keys/rskey"
    networks:
      - "backend-network"

volumes:
  mongodb1_data:
  mongodb2_data:
  mongodb3_data:
  mongodb1_config:
  mongodb2_config:
  mongodb3_config: